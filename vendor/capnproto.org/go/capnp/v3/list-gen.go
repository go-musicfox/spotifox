// Code generated by ./internal/gen/gen.go. DO NOT EDIT.

package capnp

func (l VoidList) IsValid() bool {
	return List(l).IsValid()
}

func (l VoidList) Len() int {
	return List(l).Len()
}

func (l VoidList) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (VoidList) DecodeFromPtr(p Ptr) VoidList {
	return VoidList(List{}.DecodeFromPtr(p))
}

func (l VoidList) Message() *Message {
	return List(l).Message()
}

func (l VoidList) Segment() *Segment {
	return List(l).Segment()
}

func (l VoidList) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l VoidList) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l BitList) IsValid() bool {
	return List(l).IsValid()
}

func (l BitList) Len() int {
	return List(l).Len()
}

func (l BitList) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (BitList) DecodeFromPtr(p Ptr) BitList {
	return BitList(List{}.DecodeFromPtr(p))
}

func (l BitList) Message() *Message {
	return List(l).Message()
}

func (l BitList) Segment() *Segment {
	return List(l).Segment()
}

func (l BitList) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l BitList) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l Float32List) IsValid() bool {
	return List(l).IsValid()
}

func (l Float32List) Len() int {
	return List(l).Len()
}

func (l Float32List) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (Float32List) DecodeFromPtr(p Ptr) Float32List {
	return Float32List(List{}.DecodeFromPtr(p))
}

func (l Float32List) Message() *Message {
	return List(l).Message()
}

func (l Float32List) Segment() *Segment {
	return List(l).Segment()
}

func (l Float32List) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l Float32List) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l Float64List) IsValid() bool {
	return List(l).IsValid()
}

func (l Float64List) Len() int {
	return List(l).Len()
}

func (l Float64List) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (Float64List) DecodeFromPtr(p Ptr) Float64List {
	return Float64List(List{}.DecodeFromPtr(p))
}

func (l Float64List) Message() *Message {
	return List(l).Message()
}

func (l Float64List) Segment() *Segment {
	return List(l).Segment()
}

func (l Float64List) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l Float64List) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l TextList) IsValid() bool {
	return List(l).IsValid()
}

func (l TextList) Len() int {
	return List(l).Len()
}

func (l TextList) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (TextList) DecodeFromPtr(p Ptr) TextList {
	return TextList(List{}.DecodeFromPtr(p))
}

func (l TextList) Message() *Message {
	return List(l).Message()
}

func (l TextList) Segment() *Segment {
	return List(l).Segment()
}

func (l TextList) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l TextList) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l DataList) IsValid() bool {
	return List(l).IsValid()
}

func (l DataList) Len() int {
	return List(l).Len()
}

func (l DataList) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (DataList) DecodeFromPtr(p Ptr) DataList {
	return DataList(List{}.DecodeFromPtr(p))
}

func (l DataList) Message() *Message {
	return List(l).Message()
}

func (l DataList) Segment() *Segment {
	return List(l).Segment()
}

func (l DataList) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l DataList) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l PointerList) IsValid() bool {
	return List(l).IsValid()
}

func (l PointerList) Len() int {
	return List(l).Len()
}

func (l PointerList) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (PointerList) DecodeFromPtr(p Ptr) PointerList {
	return PointerList(List{}.DecodeFromPtr(p))
}

func (l PointerList) Message() *Message {
	return List(l).Message()
}

func (l PointerList) Segment() *Segment {
	return List(l).Segment()
}

func (l PointerList) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l PointerList) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l EnumList[T]) IsValid() bool {
	return List(l).IsValid()
}

func (l EnumList[T]) Len() int {
	return List(l).Len()
}

func (l EnumList[T]) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (EnumList[T]) DecodeFromPtr(p Ptr) EnumList[T] {
	return EnumList[T](List{}.DecodeFromPtr(p))
}

func (l EnumList[T]) Message() *Message {
	return List(l).Message()
}

func (l EnumList[T]) Segment() *Segment {
	return List(l).Segment()
}

func (l EnumList[T]) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l EnumList[T]) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l StructList[T]) IsValid() bool {
	return List(l).IsValid()
}

func (l StructList[T]) Len() int {
	return List(l).Len()
}

func (l StructList[T]) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (StructList[T]) DecodeFromPtr(p Ptr) StructList[T] {
	return StructList[T](List{}.DecodeFromPtr(p))
}

func (l StructList[T]) Message() *Message {
	return List(l).Message()
}

func (l StructList[T]) Segment() *Segment {
	return List(l).Segment()
}

func (l StructList[T]) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l StructList[T]) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l CapList[T]) IsValid() bool {
	return List(l).IsValid()
}

func (l CapList[T]) Len() int {
	return List(l).Len()
}

func (l CapList[T]) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (CapList[T]) DecodeFromPtr(p Ptr) CapList[T] {
	return CapList[T](List{}.DecodeFromPtr(p))
}

func (l CapList[T]) Message() *Message {
	return List(l).Message()
}

func (l CapList[T]) Segment() *Segment {
	return List(l).Segment()
}

func (l CapList[T]) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l CapList[T]) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l Int8List) IsValid() bool {
	return List(l).IsValid()
}

func (l Int8List) Len() int {
	return List(l).Len()
}

func (l Int8List) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (Int8List) DecodeFromPtr(p Ptr) Int8List {
	return Int8List(List{}.DecodeFromPtr(p))
}

func (l Int8List) Message() *Message {
	return List(l).Message()
}

func (l Int8List) Segment() *Segment {
	return List(l).Segment()
}

func (l Int8List) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l Int8List) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l UInt8List) IsValid() bool {
	return List(l).IsValid()
}

func (l UInt8List) Len() int {
	return List(l).Len()
}

func (l UInt8List) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (UInt8List) DecodeFromPtr(p Ptr) UInt8List {
	return UInt8List(List{}.DecodeFromPtr(p))
}

func (l UInt8List) Message() *Message {
	return List(l).Message()
}

func (l UInt8List) Segment() *Segment {
	return List(l).Segment()
}

func (l UInt8List) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l UInt8List) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l Int16List) IsValid() bool {
	return List(l).IsValid()
}

func (l Int16List) Len() int {
	return List(l).Len()
}

func (l Int16List) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (Int16List) DecodeFromPtr(p Ptr) Int16List {
	return Int16List(List{}.DecodeFromPtr(p))
}

func (l Int16List) Message() *Message {
	return List(l).Message()
}

func (l Int16List) Segment() *Segment {
	return List(l).Segment()
}

func (l Int16List) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l Int16List) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l UInt16List) IsValid() bool {
	return List(l).IsValid()
}

func (l UInt16List) Len() int {
	return List(l).Len()
}

func (l UInt16List) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (UInt16List) DecodeFromPtr(p Ptr) UInt16List {
	return UInt16List(List{}.DecodeFromPtr(p))
}

func (l UInt16List) Message() *Message {
	return List(l).Message()
}

func (l UInt16List) Segment() *Segment {
	return List(l).Segment()
}

func (l UInt16List) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l UInt16List) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l Int32List) IsValid() bool {
	return List(l).IsValid()
}

func (l Int32List) Len() int {
	return List(l).Len()
}

func (l Int32List) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (Int32List) DecodeFromPtr(p Ptr) Int32List {
	return Int32List(List{}.DecodeFromPtr(p))
}

func (l Int32List) Message() *Message {
	return List(l).Message()
}

func (l Int32List) Segment() *Segment {
	return List(l).Segment()
}

func (l Int32List) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l Int32List) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l UInt32List) IsValid() bool {
	return List(l).IsValid()
}

func (l UInt32List) Len() int {
	return List(l).Len()
}

func (l UInt32List) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (UInt32List) DecodeFromPtr(p Ptr) UInt32List {
	return UInt32List(List{}.DecodeFromPtr(p))
}

func (l UInt32List) Message() *Message {
	return List(l).Message()
}

func (l UInt32List) Segment() *Segment {
	return List(l).Segment()
}

func (l UInt32List) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l UInt32List) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l Int64List) IsValid() bool {
	return List(l).IsValid()
}

func (l Int64List) Len() int {
	return List(l).Len()
}

func (l Int64List) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (Int64List) DecodeFromPtr(p Ptr) Int64List {
	return Int64List(List{}.DecodeFromPtr(p))
}

func (l Int64List) Message() *Message {
	return List(l).Message()
}

func (l Int64List) Segment() *Segment {
	return List(l).Segment()
}

func (l Int64List) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l Int64List) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}

func (l UInt64List) IsValid() bool {
	return List(l).IsValid()
}

func (l UInt64List) Len() int {
	return List(l).Len()
}

func (l UInt64List) EncodeAsPtr(seg *Segment) Ptr {
	return List(l).EncodeAsPtr(seg)
}

func (UInt64List) DecodeFromPtr(p Ptr) UInt64List {
	return UInt64List(List{}.DecodeFromPtr(p))
}

func (l UInt64List) Message() *Message {
	return List(l).Message()
}

func (l UInt64List) Segment() *Segment {
	return List(l).Segment()
}

func (l UInt64List) ToPtr() Ptr {
	return List(l).ToPtr()
}

func (l UInt64List) primitiveElem(i int, expectedSize ObjectSize) (address, error) {
	return List(l).primitiveElem(i, expectedSize)
}
