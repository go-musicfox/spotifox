// Code generated by protoc-gen-go. DO NOT EDIT.
// source: playlist4changes.proto

package Spotify

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ChangeSet_Kind int32

const (
	ChangeSet_KIND_UNKNOWN ChangeSet_Kind = 0
	ChangeSet_DELTA        ChangeSet_Kind = 2
	ChangeSet_MERGE        ChangeSet_Kind = 3
)

var ChangeSet_Kind_name = map[int32]string{
	0: "KIND_UNKNOWN",
	2: "DELTA",
	3: "MERGE",
}
var ChangeSet_Kind_value = map[string]int32{
	"KIND_UNKNOWN": 0,
	"DELTA":        2,
	"MERGE":        3,
}

func (x ChangeSet_Kind) Enum() *ChangeSet_Kind {
	p := new(ChangeSet_Kind)
	*p = x
	return p
}
func (x ChangeSet_Kind) String() string {
	return proto.EnumName(ChangeSet_Kind_name, int32(x))
}
func (x *ChangeSet_Kind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChangeSet_Kind_value, data, "ChangeSet_Kind")
	if err != nil {
		return err
	}
	*x = ChangeSet_Kind(value)
	return nil
}
func (ChangeSet_Kind) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{3, 0} }

type ChangeInfo struct {
	User             *string `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Timestamp        *int32  `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Admin            *bool   `protobuf:"varint,3,opt,name=admin" json:"admin,omitempty"`
	Undo             *bool   `protobuf:"varint,4,opt,name=undo" json:"undo,omitempty"`
	Redo             *bool   `protobuf:"varint,5,opt,name=redo" json:"redo,omitempty"`
	Merge            *bool   `protobuf:"varint,6,opt,name=merge" json:"merge,omitempty"`
	Compressed       *bool   `protobuf:"varint,7,opt,name=compressed" json:"compressed,omitempty"`
	Migration        *bool   `protobuf:"varint,8,opt,name=migration" json:"migration,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChangeInfo) Reset()                    { *m = ChangeInfo{} }
func (m *ChangeInfo) String() string            { return proto.CompactTextString(m) }
func (*ChangeInfo) ProtoMessage()               {}
func (*ChangeInfo) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *ChangeInfo) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *ChangeInfo) GetTimestamp() int32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *ChangeInfo) GetAdmin() bool {
	if m != nil && m.Admin != nil {
		return *m.Admin
	}
	return false
}

func (m *ChangeInfo) GetUndo() bool {
	if m != nil && m.Undo != nil {
		return *m.Undo
	}
	return false
}

func (m *ChangeInfo) GetRedo() bool {
	if m != nil && m.Redo != nil {
		return *m.Redo
	}
	return false
}

func (m *ChangeInfo) GetMerge() bool {
	if m != nil && m.Merge != nil {
		return *m.Merge
	}
	return false
}

func (m *ChangeInfo) GetCompressed() bool {
	if m != nil && m.Compressed != nil {
		return *m.Compressed
	}
	return false
}

func (m *ChangeInfo) GetMigration() bool {
	if m != nil && m.Migration != nil {
		return *m.Migration
	}
	return false
}

type Delta struct {
	BaseVersion      []byte      `protobuf:"bytes,1,opt,name=base_version,json=baseVersion" json:"base_version,omitempty"`
	Ops              []*Op       `protobuf:"bytes,2,rep,name=ops" json:"ops,omitempty"`
	Info             *ChangeInfo `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Delta) Reset()                    { *m = Delta{} }
func (m *Delta) String() string            { return proto.CompactTextString(m) }
func (*Delta) ProtoMessage()               {}
func (*Delta) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *Delta) GetBaseVersion() []byte {
	if m != nil {
		return m.BaseVersion
	}
	return nil
}

func (m *Delta) GetOps() []*Op {
	if m != nil {
		return m.Ops
	}
	return nil
}

func (m *Delta) GetInfo() *ChangeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type Merge struct {
	BaseVersion      []byte      `protobuf:"bytes,1,opt,name=base_version,json=baseVersion" json:"base_version,omitempty"`
	MergeVersion     []byte      `protobuf:"bytes,2,opt,name=merge_version,json=mergeVersion" json:"merge_version,omitempty"`
	Info             *ChangeInfo `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Merge) Reset()                    { *m = Merge{} }
func (m *Merge) String() string            { return proto.CompactTextString(m) }
func (*Merge) ProtoMessage()               {}
func (*Merge) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *Merge) GetBaseVersion() []byte {
	if m != nil {
		return m.BaseVersion
	}
	return nil
}

func (m *Merge) GetMergeVersion() []byte {
	if m != nil {
		return m.MergeVersion
	}
	return nil
}

func (m *Merge) GetInfo() *ChangeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type ChangeSet struct {
	Kind             *ChangeSet_Kind `protobuf:"varint,1,opt,name=kind,enum=Spotify.ChangeSet_Kind" json:"kind,omitempty"`
	Delta            *Delta          `protobuf:"bytes,2,opt,name=delta" json:"delta,omitempty"`
	Merge            *Merge          `protobuf:"bytes,3,opt,name=merge" json:"merge,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ChangeSet) Reset()                    { *m = ChangeSet{} }
func (m *ChangeSet) String() string            { return proto.CompactTextString(m) }
func (*ChangeSet) ProtoMessage()               {}
func (*ChangeSet) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *ChangeSet) GetKind() ChangeSet_Kind {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ChangeSet_KIND_UNKNOWN
}

func (m *ChangeSet) GetDelta() *Delta {
	if m != nil {
		return m.Delta
	}
	return nil
}

func (m *ChangeSet) GetMerge() *Merge {
	if m != nil {
		return m.Merge
	}
	return nil
}

type RevisionTaggedChangeSet struct {
	Revision         []byte     `protobuf:"bytes,1,opt,name=revision" json:"revision,omitempty"`
	ChangeSet        *ChangeSet `protobuf:"bytes,2,opt,name=change_set,json=changeSet" json:"change_set,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *RevisionTaggedChangeSet) Reset()                    { *m = RevisionTaggedChangeSet{} }
func (m *RevisionTaggedChangeSet) String() string            { return proto.CompactTextString(m) }
func (*RevisionTaggedChangeSet) ProtoMessage()               {}
func (*RevisionTaggedChangeSet) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *RevisionTaggedChangeSet) GetRevision() []byte {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *RevisionTaggedChangeSet) GetChangeSet() *ChangeSet {
	if m != nil {
		return m.ChangeSet
	}
	return nil
}

type Diff struct {
	FromRevision     []byte `protobuf:"bytes,1,opt,name=from_revision,json=fromRevision" json:"from_revision,omitempty"`
	Ops              []*Op  `protobuf:"bytes,2,rep,name=ops" json:"ops,omitempty"`
	ToRevision       []byte `protobuf:"bytes,3,opt,name=to_revision,json=toRevision" json:"to_revision,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Diff) Reset()                    { *m = Diff{} }
func (m *Diff) String() string            { return proto.CompactTextString(m) }
func (*Diff) ProtoMessage()               {}
func (*Diff) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *Diff) GetFromRevision() []byte {
	if m != nil {
		return m.FromRevision
	}
	return nil
}

func (m *Diff) GetOps() []*Op {
	if m != nil {
		return m.Ops
	}
	return nil
}

func (m *Diff) GetToRevision() []byte {
	if m != nil {
		return m.ToRevision
	}
	return nil
}

type ListDump struct {
	LatestRevision   []byte          `protobuf:"bytes,1,opt,name=latestRevision" json:"latestRevision,omitempty"`
	Length           *int32          `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	Attributes       *ListAttributes `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Checksum         *ListChecksum   `protobuf:"bytes,4,opt,name=checksum" json:"checksum,omitempty"`
	Contents         *ListItems      `protobuf:"bytes,5,opt,name=contents" json:"contents,omitempty"`
	PendingDeltas    []*Delta        `protobuf:"bytes,7,rep,name=pendingDeltas" json:"pendingDeltas,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ListDump) Reset()                    { *m = ListDump{} }
func (m *ListDump) String() string            { return proto.CompactTextString(m) }
func (*ListDump) ProtoMessage()               {}
func (*ListDump) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *ListDump) GetLatestRevision() []byte {
	if m != nil {
		return m.LatestRevision
	}
	return nil
}

func (m *ListDump) GetLength() int32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *ListDump) GetAttributes() *ListAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ListDump) GetChecksum() *ListChecksum {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *ListDump) GetContents() *ListItems {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *ListDump) GetPendingDeltas() []*Delta {
	if m != nil {
		return m.PendingDeltas
	}
	return nil
}

type ListChanges struct {
	BaseRevision           []byte    `protobuf:"bytes,1,opt,name=baseRevision" json:"baseRevision,omitempty"`
	Deltas                 []*Delta  `protobuf:"bytes,2,rep,name=deltas" json:"deltas,omitempty"`
	WantResultingRevisions *bool     `protobuf:"varint,3,opt,name=wantResultingRevisions" json:"wantResultingRevisions,omitempty"`
	WantSyncResult         *bool     `protobuf:"varint,4,opt,name=wantSyncResult" json:"wantSyncResult,omitempty"`
	Dump                   *ListDump `protobuf:"bytes,5,opt,name=dump" json:"dump,omitempty"`
	Nonces                 []int32   `protobuf:"varint,6,rep,name=nonces" json:"nonces,omitempty"`
	XXX_unrecognized       []byte    `json:"-"`
}

func (m *ListChanges) Reset()                    { *m = ListChanges{} }
func (m *ListChanges) String() string            { return proto.CompactTextString(m) }
func (*ListChanges) ProtoMessage()               {}
func (*ListChanges) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

func (m *ListChanges) GetBaseRevision() []byte {
	if m != nil {
		return m.BaseRevision
	}
	return nil
}

func (m *ListChanges) GetDeltas() []*Delta {
	if m != nil {
		return m.Deltas
	}
	return nil
}

func (m *ListChanges) GetWantResultingRevisions() bool {
	if m != nil && m.WantResultingRevisions != nil {
		return *m.WantResultingRevisions
	}
	return false
}

func (m *ListChanges) GetWantSyncResult() bool {
	if m != nil && m.WantSyncResult != nil {
		return *m.WantSyncResult
	}
	return false
}

func (m *ListChanges) GetDump() *ListDump {
	if m != nil {
		return m.Dump
	}
	return nil
}

func (m *ListChanges) GetNonces() []int32 {
	if m != nil {
		return m.Nonces
	}
	return nil
}

type SelectedListContent struct {
	Revision           []byte                 `protobuf:"bytes,1,opt,name=revision" json:"revision,omitempty"`
	Length             *int32                 `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	Attributes         *ListAttributes        `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Checksum           *ListChecksum          `protobuf:"bytes,4,opt,name=checksum" json:"checksum,omitempty"`
	Contents           *ListItems             `protobuf:"bytes,5,opt,name=contents" json:"contents,omitempty"`
	Diff               *Diff                  `protobuf:"bytes,6,opt,name=diff" json:"diff,omitempty"`
	SyncResult         *Diff                  `protobuf:"bytes,7,opt,name=syncResult" json:"syncResult,omitempty"`
	ResultingRevisions [][]byte               `protobuf:"bytes,8,rep,name=resultingRevisions" json:"resultingRevisions,omitempty"`
	MultipleHeads      *bool                  `protobuf:"varint,9,opt,name=multipleHeads" json:"multipleHeads,omitempty"`
	UpToDate           *bool                  `protobuf:"varint,10,opt,name=upToDate" json:"upToDate,omitempty"`
	ResolveAction      []*ClientResolveAction `protobuf:"bytes,12,rep,name=resolveAction" json:"resolveAction,omitempty"`
	Issues             []*ClientIssue         `protobuf:"bytes,13,rep,name=issues" json:"issues,omitempty"`
	Nonces             []int32                `protobuf:"varint,14,rep,name=nonces" json:"nonces,omitempty"`
	XXX_unrecognized   []byte                 `json:"-"`
}

func (m *SelectedListContent) Reset()                    { *m = SelectedListContent{} }
func (m *SelectedListContent) String() string            { return proto.CompactTextString(m) }
func (*SelectedListContent) ProtoMessage()               {}
func (*SelectedListContent) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

func (m *SelectedListContent) GetRevision() []byte {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *SelectedListContent) GetLength() int32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *SelectedListContent) GetAttributes() *ListAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *SelectedListContent) GetChecksum() *ListChecksum {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *SelectedListContent) GetContents() *ListItems {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *SelectedListContent) GetDiff() *Diff {
	if m != nil {
		return m.Diff
	}
	return nil
}

func (m *SelectedListContent) GetSyncResult() *Diff {
	if m != nil {
		return m.SyncResult
	}
	return nil
}

func (m *SelectedListContent) GetResultingRevisions() [][]byte {
	if m != nil {
		return m.ResultingRevisions
	}
	return nil
}

func (m *SelectedListContent) GetMultipleHeads() bool {
	if m != nil && m.MultipleHeads != nil {
		return *m.MultipleHeads
	}
	return false
}

func (m *SelectedListContent) GetUpToDate() bool {
	if m != nil && m.UpToDate != nil {
		return *m.UpToDate
	}
	return false
}

func (m *SelectedListContent) GetResolveAction() []*ClientResolveAction {
	if m != nil {
		return m.ResolveAction
	}
	return nil
}

func (m *SelectedListContent) GetIssues() []*ClientIssue {
	if m != nil {
		return m.Issues
	}
	return nil
}

func (m *SelectedListContent) GetNonces() []int32 {
	if m != nil {
		return m.Nonces
	}
	return nil
}

func init() {
	proto.RegisterType((*ChangeInfo)(nil), "Spotify.ChangeInfo")
	proto.RegisterType((*Delta)(nil), "Spotify.Delta")
	proto.RegisterType((*Merge)(nil), "Spotify.Merge")
	proto.RegisterType((*ChangeSet)(nil), "Spotify.ChangeSet")
	proto.RegisterType((*RevisionTaggedChangeSet)(nil), "Spotify.RevisionTaggedChangeSet")
	proto.RegisterType((*Diff)(nil), "Spotify.Diff")
	proto.RegisterType((*ListDump)(nil), "Spotify.ListDump")
	proto.RegisterType((*ListChanges)(nil), "Spotify.ListChanges")
	proto.RegisterType((*SelectedListContent)(nil), "Spotify.SelectedListContent")
	proto.RegisterEnum("Spotify.ChangeSet_Kind", ChangeSet_Kind_name, ChangeSet_Kind_value)
}

func init() { proto.RegisterFile("playlist4changes.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 845 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0x51, 0x6f, 0xdb, 0x36,
	0x10, 0x9e, 0x6d, 0xd9, 0xb1, 0xcf, 0x76, 0x90, 0x31, 0x6d, 0x2a, 0x04, 0xdd, 0xe6, 0x6a, 0x5d,
	0x67, 0x60, 0x9b, 0x81, 0x1a, 0xc5, 0xf6, 0x9c, 0xd5, 0xc1, 0x16, 0xa4, 0x4d, 0x01, 0x3a, 0xdb,
	0x1e, 0x03, 0x55, 0x3a, 0x39, 0x44, 0x24, 0x52, 0x10, 0xe9, 0x6c, 0xf9, 0x2f, 0xfb, 0x17, 0xdb,
	0x0f, 0xd9, 0xcf, 0xd9, 0xe3, 0xc0, 0x13, 0x2d, 0xd9, 0x6a, 0xb6, 0xf5, 0xb5, 0x6f, 0xe4, 0xf7,
	0x7d, 0xc7, 0xe3, 0x7d, 0x77, 0xa2, 0xe0, 0x28, 0x4f, 0xc3, 0xbb, 0x54, 0x68, 0xf3, 0x22, 0xba,
	0x0e, 0xe5, 0x0a, 0xf5, 0x2c, 0x2f, 0x94, 0x51, 0x6c, 0x6f, 0x99, 0x2b, 0x23, 0x92, 0xbb, 0x63,
	0x56, 0x09, 0x54, 0xee, 0xc8, 0xe3, 0xc3, 0x0a, 0xcb, 0xd0, 0x84, 0x0e, 0xdc, 0x3a, 0x49, 0x49,
	0x83, 0xd2, 0x38, 0xfc, 0x61, 0x85, 0x0b, 0xad, 0xd7, 0x9b, 0x04, 0xc1, 0x5f, 0x2d, 0x80, 0x97,
	0x94, 0xf2, 0x4c, 0x26, 0x8a, 0x31, 0xf0, 0xd6, 0x1a, 0x0b, 0xbf, 0x35, 0x69, 0x4d, 0x07, 0x9c,
	0xd6, 0xec, 0x31, 0x0c, 0x8c, 0xc8, 0x50, 0x9b, 0x30, 0xcb, 0xfd, 0xf6, 0xa4, 0x35, 0xed, 0xf2,
	0x1a, 0x60, 0x0f, 0xa0, 0x1b, 0xc6, 0x99, 0x90, 0x7e, 0x67, 0xd2, 0x9a, 0xf6, 0x79, 0xb9, 0xa1,
	0x73, 0x64, 0xac, 0x7c, 0x8f, 0x40, 0x5a, 0x5b, 0xac, 0xc0, 0x58, 0xf9, 0xdd, 0x12, 0xb3, 0x6b,
	0x1b, 0x9d, 0x61, 0xb1, 0x42, 0xbf, 0x57, 0x46, 0xd3, 0x86, 0x7d, 0x0a, 0x10, 0xa9, 0x2c, 0x2f,
	0x50, 0x6b, 0x8c, 0xfd, 0x3d, 0xa2, 0xb6, 0x10, 0x7b, 0xa3, 0x4c, 0xac, 0x8a, 0xd0, 0x08, 0x25,
	0xfd, 0x3e, 0xd1, 0x35, 0x10, 0x14, 0xd0, 0x5d, 0x60, 0x6a, 0x42, 0xf6, 0x04, 0x46, 0x6f, 0x43,
	0x8d, 0x57, 0xb7, 0x58, 0x68, 0xab, 0xb4, 0x45, 0x8d, 0xf8, 0xd0, 0x62, 0x3f, 0x97, 0x10, 0xfb,
	0x04, 0x3a, 0x2a, 0xd7, 0x7e, 0x7b, 0xd2, 0x99, 0x0e, 0xe7, 0xc3, 0x99, 0x73, 0x7b, 0xf6, 0x26,
	0xe7, 0x16, 0x67, 0x5f, 0x82, 0x27, 0x64, 0x52, 0x96, 0x31, 0x9c, 0x1f, 0x56, 0x7c, 0xed, 0x18,
	0x27, 0x41, 0xf0, 0x1b, 0x74, 0x5f, 0xd3, 0xd5, 0xdf, 0x23, 0xe7, 0xe7, 0x30, 0xa6, 0x32, 0x2b,
	0x4d, 0x9b, 0x34, 0x23, 0x02, 0x37, 0xa2, 0xf7, 0xce, 0xfc, 0x67, 0x0b, 0x06, 0x25, 0xb8, 0x44,
	0xc3, 0xbe, 0x02, 0xef, 0x46, 0xc8, 0x98, 0xd2, 0xee, 0xcf, 0x1f, 0x35, 0xc2, 0x96, 0x68, 0x66,
	0xe7, 0x42, 0xc6, 0x9c, 0x44, 0xec, 0x29, 0x74, 0x63, 0x6b, 0x14, 0x5d, 0x60, 0x38, 0xdf, 0xaf,
	0xd4, 0x64, 0x1f, 0x2f, 0x49, 0xab, 0x2a, 0x5b, 0xd4, 0x69, 0xa8, 0xa8, 0x60, 0xd7, 0xb2, 0x60,
	0x06, 0x9e, 0x3d, 0x99, 0x1d, 0xc0, 0xe8, 0xfc, 0xec, 0x62, 0x71, 0xf5, 0xd3, 0xc5, 0xf9, 0xc5,
	0x9b, 0x5f, 0x2e, 0x0e, 0x3e, 0x62, 0x03, 0xe8, 0x2e, 0x4e, 0x5f, 0x5d, 0x9e, 0x1c, 0xb4, 0xed,
	0xf2, 0xf5, 0x29, 0xff, 0xe1, 0xf4, 0xa0, 0x13, 0x5c, 0xc3, 0x23, 0x8e, 0xb7, 0xc2, 0xd6, 0x7a,
	0x19, 0xae, 0x56, 0x18, 0xd7, 0x35, 0x1c, 0x43, 0xbf, 0x70, 0x94, 0xb3, 0xaf, 0xda, 0xb3, 0xe7,
	0x00, 0xe5, 0x07, 0x72, 0xa5, 0xd1, 0xb8, 0x7b, 0xb3, 0x77, 0xab, 0xe4, 0x83, 0x68, 0xb3, 0x0c,
	0x6e, 0xc0, 0x5b, 0x88, 0x24, 0xb1, 0xb6, 0x27, 0x85, 0xca, 0xae, 0x1a, 0x67, 0x8f, 0x2c, 0xb8,
	0xb9, 0xca, 0xff, 0xcd, 0xc3, 0x67, 0x30, 0x34, 0xaa, 0x3e, 0xa1, 0x43, 0x27, 0x80, 0x51, 0x9b,
	0xf8, 0xe0, 0xf7, 0x36, 0xf4, 0x5f, 0x09, 0x6d, 0x16, 0xeb, 0x2c, 0x67, 0xcf, 0x60, 0x3f, 0x0d,
	0x0d, 0x6a, 0xc3, 0x77, 0x53, 0x36, 0x50, 0x76, 0x04, 0xbd, 0x14, 0xe5, 0xca, 0x5c, 0xbb, 0xaf,
	0xcb, 0xed, 0xd8, 0x77, 0x00, 0xa1, 0x31, 0x85, 0x78, 0xbb, 0x36, 0xa8, 0x9d, 0xfd, 0x75, 0x4b,
	0x6d, 0x9a, 0x93, 0x8a, 0xe6, 0x5b, 0x52, 0xf6, 0x1c, 0xfa, 0xd1, 0x35, 0x46, 0x37, 0x7a, 0x9d,
	0xb9, 0x01, 0x7a, 0xb8, 0x13, 0xf6, 0xd2, 0x91, 0xbc, 0x92, 0xb1, 0x19, 0xf4, 0xdd, 0x7b, 0xa1,
	0xe9, 0x03, 0xdd, 0xb6, 0xd5, 0x86, 0x9c, 0x19, 0xcc, 0x34, 0xaf, 0x34, 0xec, 0x05, 0x8c, 0x73,
	0x94, 0xb1, 0x90, 0x2b, 0x1a, 0x16, 0xed, 0xef, 0x91, 0x65, 0xcd, 0x19, 0xda, 0x15, 0x05, 0x7f,
	0xb7, 0x60, 0x58, 0x5e, 0x80, 0x1e, 0x39, 0x16, 0x94, 0x5f, 0x4b, 0xc3, 0x9f, 0x1d, 0x8c, 0x3d,
	0x83, 0x5e, 0x5c, 0xa6, 0x68, 0xdf, 0x9b, 0xc2, 0xb1, 0xec, 0x5b, 0x38, 0xfa, 0x35, 0x94, 0x86,
	0xa3, 0x5e, 0xa7, 0x46, 0xc8, 0xd5, 0xe6, 0x00, 0xed, 0x5e, 0xa6, 0x7f, 0x61, 0x6d, 0x97, 0x2c,
	0xb3, 0xbc, 0x93, 0x51, 0xc9, 0xba, 0x47, 0xab, 0x81, 0xb2, 0x2f, 0xc0, 0x8b, 0xd7, 0x59, 0xee,
	0xdc, 0xf9, 0x78, 0xc7, 0x1d, 0xdb, 0x6e, 0x4e, 0xb4, 0x6d, 0xa6, 0x54, 0x32, 0x42, 0xed, 0xf7,
	0x26, 0x1d, 0xdb, 0xcc, 0x72, 0x17, 0xfc, 0xe1, 0xc1, 0xe1, 0x12, 0x53, 0x8c, 0x0c, 0xc6, 0x64,
	0x41, 0xe9, 0xe4, 0x7f, 0x4e, 0xfb, 0x87, 0x38, 0x18, 0x4f, 0xc0, 0x8b, 0x45, 0x92, 0xd0, 0x83,
	0x3e, 0x9c, 0x8f, 0xeb, 0x66, 0x89, 0x24, 0xe1, 0x44, 0xb1, 0x6f, 0x00, 0x74, 0xed, 0xf6, 0xde,
	0x7d, 0xc2, 0x2d, 0x01, 0x9b, 0x01, 0x2b, 0xde, 0x6d, 0x6a, 0x7f, 0xd2, 0x99, 0x8e, 0xf8, 0x3d,
	0x0c, 0x7b, 0x0a, 0xe3, 0xcc, 0x62, 0x79, 0x8a, 0x3f, 0x62, 0x18, 0x6b, 0x7f, 0x40, 0xfd, 0xdc,
	0x05, 0xad, 0xef, 0xeb, 0xfc, 0x52, 0x2d, 0x42, 0x83, 0x3e, 0x90, 0xa0, 0xda, 0xb3, 0xef, 0x61,
	0x5c, 0xa0, 0x56, 0xe9, 0x2d, 0x9e, 0x44, 0xf4, 0x8f, 0x19, 0xd1, 0xe4, 0x3d, 0xae, 0x1f, 0x9a,
	0x54, 0x20, 0x0d, 0x53, 0xad, 0xe1, 0xbb, 0x21, 0xec, 0x6b, 0xe8, 0x95, 0x3f, 0x5a, 0x7f, 0x4c,
	0xc1, 0x0f, 0x1a, 0xc1, 0x67, 0x96, 0xe4, 0x4e, 0xb3, 0x35, 0x35, 0xfb, 0xdb, 0x53, 0xf3, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x98, 0xb6, 0x86, 0x18, 0x08, 0x00, 0x00,
}
