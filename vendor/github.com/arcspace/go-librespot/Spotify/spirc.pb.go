// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spirc.proto

package Spotify

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MessageType int32

const (
	MessageType_kMessageTypeHello          MessageType = 1
	MessageType_kMessageTypeGoodbye        MessageType = 2
	MessageType_kMessageTypeProbe          MessageType = 3
	MessageType_kMessageTypeNotify         MessageType = 10
	MessageType_kMessageTypeLoad           MessageType = 20
	MessageType_kMessageTypePlay           MessageType = 21
	MessageType_kMessageTypePause          MessageType = 22
	MessageType_kMessageTypePlayPause      MessageType = 23
	MessageType_kMessageTypeSeek           MessageType = 24
	MessageType_kMessageTypePrev           MessageType = 25
	MessageType_kMessageTypeNext           MessageType = 26
	MessageType_kMessageTypeVolume         MessageType = 27
	MessageType_kMessageTypeShuffle        MessageType = 28
	MessageType_kMessageTypeRepeat         MessageType = 29
	MessageType_kMessageTypeVolumeDown     MessageType = 31
	MessageType_kMessageTypeVolumeUp       MessageType = 32
	MessageType_kMessageTypeReplace        MessageType = 33
	MessageType_kMessageTypeLogout         MessageType = 34
	MessageType_kMessageTypeAction         MessageType = 35
	MessageType_kMessageTypeRename         MessageType = 36
	MessageType_kMessageTypeUpdateMetadata MessageType = 128
)

var MessageType_name = map[int32]string{
	1:   "kMessageTypeHello",
	2:   "kMessageTypeGoodbye",
	3:   "kMessageTypeProbe",
	10:  "kMessageTypeNotify",
	20:  "kMessageTypeLoad",
	21:  "kMessageTypePlay",
	22:  "kMessageTypePause",
	23:  "kMessageTypePlayPause",
	24:  "kMessageTypeSeek",
	25:  "kMessageTypePrev",
	26:  "kMessageTypeNext",
	27:  "kMessageTypeVolume",
	28:  "kMessageTypeShuffle",
	29:  "kMessageTypeRepeat",
	31:  "kMessageTypeVolumeDown",
	32:  "kMessageTypeVolumeUp",
	33:  "kMessageTypeReplace",
	34:  "kMessageTypeLogout",
	35:  "kMessageTypeAction",
	36:  "kMessageTypeRename",
	128: "kMessageTypeUpdateMetadata",
}
var MessageType_value = map[string]int32{
	"kMessageTypeHello":          1,
	"kMessageTypeGoodbye":        2,
	"kMessageTypeProbe":          3,
	"kMessageTypeNotify":         10,
	"kMessageTypeLoad":           20,
	"kMessageTypePlay":           21,
	"kMessageTypePause":          22,
	"kMessageTypePlayPause":      23,
	"kMessageTypeSeek":           24,
	"kMessageTypePrev":           25,
	"kMessageTypeNext":           26,
	"kMessageTypeVolume":         27,
	"kMessageTypeShuffle":        28,
	"kMessageTypeRepeat":         29,
	"kMessageTypeVolumeDown":     31,
	"kMessageTypeVolumeUp":       32,
	"kMessageTypeReplace":        33,
	"kMessageTypeLogout":         34,
	"kMessageTypeAction":         35,
	"kMessageTypeRename":         36,
	"kMessageTypeUpdateMetadata": 128,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor18, []int{0} }

type CapabilityType int32

const (
	CapabilityType_kSupportedContexts  CapabilityType = 1
	CapabilityType_kCanBePlayer        CapabilityType = 2
	CapabilityType_kRestrictToLocal    CapabilityType = 3
	CapabilityType_kDeviceType         CapabilityType = 4
	CapabilityType_kGaiaEqConnectId    CapabilityType = 5
	CapabilityType_kSupportsLogout     CapabilityType = 6
	CapabilityType_kIsObservable       CapabilityType = 7
	CapabilityType_kVolumeSteps        CapabilityType = 8
	CapabilityType_kSupportedTypes     CapabilityType = 9
	CapabilityType_kCommandAcks        CapabilityType = 10
	CapabilityType_kSupportsRename     CapabilityType = 11
	CapabilityType_kHidden             CapabilityType = 12
	CapabilityType_kSupportsPlaylistV2 CapabilityType = 13
)

var CapabilityType_name = map[int32]string{
	1:  "kSupportedContexts",
	2:  "kCanBePlayer",
	3:  "kRestrictToLocal",
	4:  "kDeviceType",
	5:  "kGaiaEqConnectId",
	6:  "kSupportsLogout",
	7:  "kIsObservable",
	8:  "kVolumeSteps",
	9:  "kSupportedTypes",
	10: "kCommandAcks",
	11: "kSupportsRename",
	12: "kHidden",
	13: "kSupportsPlaylistV2",
}
var CapabilityType_value = map[string]int32{
	"kSupportedContexts":  1,
	"kCanBePlayer":        2,
	"kRestrictToLocal":    3,
	"kDeviceType":         4,
	"kGaiaEqConnectId":    5,
	"kSupportsLogout":     6,
	"kIsObservable":       7,
	"kVolumeSteps":        8,
	"kSupportedTypes":     9,
	"kCommandAcks":        10,
	"kSupportsRename":     11,
	"kHidden":             12,
	"kSupportsPlaylistV2": 13,
}

func (x CapabilityType) Enum() *CapabilityType {
	p := new(CapabilityType)
	*p = x
	return p
}
func (x CapabilityType) String() string {
	return proto.EnumName(CapabilityType_name, int32(x))
}
func (x *CapabilityType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CapabilityType_value, data, "CapabilityType")
	if err != nil {
		return err
	}
	*x = CapabilityType(value)
	return nil
}
func (CapabilityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor18, []int{1} }

type PlayStatus int32

const (
	PlayStatus_kPlayStatusStop    PlayStatus = 0
	PlayStatus_kPlayStatusPlay    PlayStatus = 1
	PlayStatus_kPlayStatusPause   PlayStatus = 2
	PlayStatus_kPlayStatusLoading PlayStatus = 3
)

var PlayStatus_name = map[int32]string{
	0: "kPlayStatusStop",
	1: "kPlayStatusPlay",
	2: "kPlayStatusPause",
	3: "kPlayStatusLoading",
}
var PlayStatus_value = map[string]int32{
	"kPlayStatusStop":    0,
	"kPlayStatusPlay":    1,
	"kPlayStatusPause":   2,
	"kPlayStatusLoading": 3,
}

func (x PlayStatus) Enum() *PlayStatus {
	p := new(PlayStatus)
	*p = x
	return p
}
func (x PlayStatus) String() string {
	return proto.EnumName(PlayStatus_name, int32(x))
}
func (x *PlayStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayStatus_value, data, "PlayStatus")
	if err != nil {
		return err
	}
	*x = PlayStatus(value)
	return nil
}
func (PlayStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor18, []int{2} }

type Frame struct {
	Version            *uint32      `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Ident              *string      `protobuf:"bytes,2,opt,name=ident" json:"ident,omitempty"`
	ProtocolVersion    *string      `protobuf:"bytes,3,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	SeqNr              *uint32      `protobuf:"varint,4,opt,name=seq_nr,json=seqNr" json:"seq_nr,omitempty"`
	Typ                *MessageType `protobuf:"varint,5,opt,name=typ,enum=Spotify.MessageType" json:"typ,omitempty"`
	DeviceState        *DeviceState `protobuf:"bytes,7,opt,name=device_state,json=deviceState" json:"device_state,omitempty"`
	Goodbye            *Goodbye     `protobuf:"bytes,11,opt,name=goodbye" json:"goodbye,omitempty"`
	State              *State       `protobuf:"bytes,12,opt,name=state" json:"state,omitempty"`
	Position           *uint32      `protobuf:"varint,13,opt,name=position" json:"position,omitempty"`
	Volume             *uint32      `protobuf:"varint,14,opt,name=volume" json:"volume,omitempty"`
	StateUpdateId      *int64       `protobuf:"varint,17,opt,name=state_update_id,json=stateUpdateId" json:"state_update_id,omitempty"`
	Recipient          []string     `protobuf:"bytes,18,rep,name=recipient" json:"recipient,omitempty"`
	ContextPlayerState []byte       `protobuf:"bytes,19,opt,name=context_player_state,json=contextPlayerState" json:"context_player_state,omitempty"`
	NewName            *string      `protobuf:"bytes,20,opt,name=new_name,json=newName" json:"new_name,omitempty"`
	Metadata           *Metadata    `protobuf:"bytes,25,opt,name=metadata" json:"metadata,omitempty"`
	XXX_unrecognized   []byte       `json:"-"`
}

func (m *Frame) Reset()                    { *m = Frame{} }
func (m *Frame) String() string            { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()               {}
func (*Frame) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{0} }

func (m *Frame) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *Frame) GetIdent() string {
	if m != nil && m.Ident != nil {
		return *m.Ident
	}
	return ""
}

func (m *Frame) GetProtocolVersion() string {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return ""
}

func (m *Frame) GetSeqNr() uint32 {
	if m != nil && m.SeqNr != nil {
		return *m.SeqNr
	}
	return 0
}

func (m *Frame) GetTyp() MessageType {
	if m != nil && m.Typ != nil {
		return *m.Typ
	}
	return MessageType_kMessageTypeHello
}

func (m *Frame) GetDeviceState() *DeviceState {
	if m != nil {
		return m.DeviceState
	}
	return nil
}

func (m *Frame) GetGoodbye() *Goodbye {
	if m != nil {
		return m.Goodbye
	}
	return nil
}

func (m *Frame) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Frame) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *Frame) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *Frame) GetStateUpdateId() int64 {
	if m != nil && m.StateUpdateId != nil {
		return *m.StateUpdateId
	}
	return 0
}

func (m *Frame) GetRecipient() []string {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *Frame) GetContextPlayerState() []byte {
	if m != nil {
		return m.ContextPlayerState
	}
	return nil
}

func (m *Frame) GetNewName() string {
	if m != nil && m.NewName != nil {
		return *m.NewName
	}
	return ""
}

func (m *Frame) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type DeviceState struct {
	SwVersion          *string       `protobuf:"bytes,1,opt,name=sw_version,json=swVersion" json:"sw_version,omitempty"`
	IsActive           *bool         `protobuf:"varint,10,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	CanPlay            *bool         `protobuf:"varint,11,opt,name=can_play,json=canPlay" json:"can_play,omitempty"`
	Volume             *uint32       `protobuf:"varint,12,opt,name=volume" json:"volume,omitempty"`
	Name               *string       `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	ErrorCode          *uint32       `protobuf:"varint,14,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	BecameActiveAt     *int64        `protobuf:"varint,15,opt,name=became_active_at,json=becameActiveAt" json:"became_active_at,omitempty"`
	ErrorMessage       *string       `protobuf:"bytes,16,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	Capabilities       []*Capability `protobuf:"bytes,17,rep,name=capabilities" json:"capabilities,omitempty"`
	ContextPlayerError *string       `protobuf:"bytes,20,opt,name=context_player_error,json=contextPlayerError" json:"context_player_error,omitempty"`
	Metadata           []*Metadata   `protobuf:"bytes,25,rep,name=metadata" json:"metadata,omitempty"`
	XXX_unrecognized   []byte        `json:"-"`
}

func (m *DeviceState) Reset()                    { *m = DeviceState{} }
func (m *DeviceState) String() string            { return proto.CompactTextString(m) }
func (*DeviceState) ProtoMessage()               {}
func (*DeviceState) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{1} }

func (m *DeviceState) GetSwVersion() string {
	if m != nil && m.SwVersion != nil {
		return *m.SwVersion
	}
	return ""
}

func (m *DeviceState) GetIsActive() bool {
	if m != nil && m.IsActive != nil {
		return *m.IsActive
	}
	return false
}

func (m *DeviceState) GetCanPlay() bool {
	if m != nil && m.CanPlay != nil {
		return *m.CanPlay
	}
	return false
}

func (m *DeviceState) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *DeviceState) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeviceState) GetErrorCode() uint32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *DeviceState) GetBecameActiveAt() int64 {
	if m != nil && m.BecameActiveAt != nil {
		return *m.BecameActiveAt
	}
	return 0
}

func (m *DeviceState) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *DeviceState) GetCapabilities() []*Capability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *DeviceState) GetContextPlayerError() string {
	if m != nil && m.ContextPlayerError != nil {
		return *m.ContextPlayerError
	}
	return ""
}

func (m *DeviceState) GetMetadata() []*Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Capability struct {
	Typ              *CapabilityType `protobuf:"varint,1,opt,name=typ,enum=Spotify.CapabilityType" json:"typ,omitempty"`
	IntValue         []int64         `protobuf:"varint,2,rep,name=intValue" json:"intValue,omitempty"`
	StringValue      []string        `protobuf:"bytes,3,rep,name=stringValue" json:"stringValue,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Capability) Reset()                    { *m = Capability{} }
func (m *Capability) String() string            { return proto.CompactTextString(m) }
func (*Capability) ProtoMessage()               {}
func (*Capability) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{2} }

func (m *Capability) GetTyp() CapabilityType {
	if m != nil && m.Typ != nil {
		return *m.Typ
	}
	return CapabilityType_kSupportedContexts
}

func (m *Capability) GetIntValue() []int64 {
	if m != nil {
		return m.IntValue
	}
	return nil
}

func (m *Capability) GetStringValue() []string {
	if m != nil {
		return m.StringValue
	}
	return nil
}

type Goodbye struct {
	Reason           *string `protobuf:"bytes,1,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Goodbye) Reset()                    { *m = Goodbye{} }
func (m *Goodbye) String() string            { return proto.CompactTextString(m) }
func (*Goodbye) ProtoMessage()               {}
func (*Goodbye) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{3} }

func (m *Goodbye) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

type State struct {
	ContextUri          *string     `protobuf:"bytes,2,opt,name=context_uri,json=contextUri" json:"context_uri,omitempty"`
	Index               *uint32     `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	PositionMs          *uint32     `protobuf:"varint,4,opt,name=position_ms,json=positionMs" json:"position_ms,omitempty"`
	Status              *PlayStatus `protobuf:"varint,5,opt,name=status,enum=Spotify.PlayStatus" json:"status,omitempty"`
	PositionMeasuredAt  *uint64     `protobuf:"varint,7,opt,name=position_measured_at,json=positionMeasuredAt" json:"position_measured_at,omitempty"`
	ContextDescription  *string     `protobuf:"bytes,8,opt,name=context_description,json=contextDescription" json:"context_description,omitempty"`
	Shuffle             *bool       `protobuf:"varint,13,opt,name=shuffle" json:"shuffle,omitempty"`
	Repeat              *bool       `protobuf:"varint,14,opt,name=repeat" json:"repeat,omitempty"`
	LastCommandIdent    *string     `protobuf:"bytes,20,opt,name=last_command_ident,json=lastCommandIdent" json:"last_command_ident,omitempty"`
	LastCommandMsgid    *uint32     `protobuf:"varint,21,opt,name=last_command_msgid,json=lastCommandMsgid" json:"last_command_msgid,omitempty"`
	PlayingFromFallback *bool       `protobuf:"varint,24,opt,name=playing_from_fallback,json=playingFromFallback" json:"playing_from_fallback,omitempty"`
	Row                 *uint32     `protobuf:"varint,25,opt,name=row" json:"row,omitempty"`
	PlayingTrackIndex   *uint32     `protobuf:"varint,26,opt,name=playing_track_index,json=playingTrackIndex" json:"playing_track_index,omitempty"`
	Track               []*TrackRef `protobuf:"bytes,27,rep,name=track" json:"track,omitempty"`
	Ad                  *Ad         `protobuf:"bytes,28,opt,name=ad" json:"ad,omitempty"`
	XXX_unrecognized    []byte      `json:"-"`
}

func (m *State) Reset()                    { *m = State{} }
func (m *State) String() string            { return proto.CompactTextString(m) }
func (*State) ProtoMessage()               {}
func (*State) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{4} }

func (m *State) GetContextUri() string {
	if m != nil && m.ContextUri != nil {
		return *m.ContextUri
	}
	return ""
}

func (m *State) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *State) GetPositionMs() uint32 {
	if m != nil && m.PositionMs != nil {
		return *m.PositionMs
	}
	return 0
}

func (m *State) GetStatus() PlayStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return PlayStatus_kPlayStatusStop
}

func (m *State) GetPositionMeasuredAt() uint64 {
	if m != nil && m.PositionMeasuredAt != nil {
		return *m.PositionMeasuredAt
	}
	return 0
}

func (m *State) GetContextDescription() string {
	if m != nil && m.ContextDescription != nil {
		return *m.ContextDescription
	}
	return ""
}

func (m *State) GetShuffle() bool {
	if m != nil && m.Shuffle != nil {
		return *m.Shuffle
	}
	return false
}

func (m *State) GetRepeat() bool {
	if m != nil && m.Repeat != nil {
		return *m.Repeat
	}
	return false
}

func (m *State) GetLastCommandIdent() string {
	if m != nil && m.LastCommandIdent != nil {
		return *m.LastCommandIdent
	}
	return ""
}

func (m *State) GetLastCommandMsgid() uint32 {
	if m != nil && m.LastCommandMsgid != nil {
		return *m.LastCommandMsgid
	}
	return 0
}

func (m *State) GetPlayingFromFallback() bool {
	if m != nil && m.PlayingFromFallback != nil {
		return *m.PlayingFromFallback
	}
	return false
}

func (m *State) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *State) GetPlayingTrackIndex() uint32 {
	if m != nil && m.PlayingTrackIndex != nil {
		return *m.PlayingTrackIndex
	}
	return 0
}

func (m *State) GetTrack() []*TrackRef {
	if m != nil {
		return m.Track
	}
	return nil
}

func (m *State) GetAd() *Ad {
	if m != nil {
		return m.Ad
	}
	return nil
}

type TrackRef struct {
	Gid              []byte  `protobuf:"bytes,1,opt,name=gid" json:"gid,omitempty"`
	Uri              *string `protobuf:"bytes,2,opt,name=uri" json:"uri,omitempty"`
	Queued           *bool   `protobuf:"varint,3,opt,name=queued" json:"queued,omitempty"`
	Context          *string `protobuf:"bytes,4,opt,name=context" json:"context,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TrackRef) Reset()                    { *m = TrackRef{} }
func (m *TrackRef) String() string            { return proto.CompactTextString(m) }
func (*TrackRef) ProtoMessage()               {}
func (*TrackRef) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{5} }

func (m *TrackRef) GetGid() []byte {
	if m != nil {
		return m.Gid
	}
	return nil
}

func (m *TrackRef) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *TrackRef) GetQueued() bool {
	if m != nil && m.Queued != nil {
		return *m.Queued
	}
	return false
}

func (m *TrackRef) GetContext() string {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return ""
}

type Ad struct {
	Next             *int32  `protobuf:"varint,1,opt,name=next" json:"next,omitempty"`
	OggFid           []byte  `protobuf:"bytes,2,opt,name=ogg_fid,json=oggFid" json:"ogg_fid,omitempty"`
	ImageFid         []byte  `protobuf:"bytes,3,opt,name=image_fid,json=imageFid" json:"image_fid,omitempty"`
	Duration         *int32  `protobuf:"varint,4,opt,name=duration" json:"duration,omitempty"`
	ClickUrl         *string `protobuf:"bytes,5,opt,name=click_url,json=clickUrl" json:"click_url,omitempty"`
	ImpressionUrl    *string `protobuf:"bytes,6,opt,name=impression_url,json=impressionUrl" json:"impression_url,omitempty"`
	Product          *string `protobuf:"bytes,7,opt,name=product" json:"product,omitempty"`
	Advertiser       *string `protobuf:"bytes,8,opt,name=advertiser" json:"advertiser,omitempty"`
	Gid              []byte  `protobuf:"bytes,9,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Ad) Reset()                    { *m = Ad{} }
func (m *Ad) String() string            { return proto.CompactTextString(m) }
func (*Ad) ProtoMessage()               {}
func (*Ad) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{6} }

func (m *Ad) GetNext() int32 {
	if m != nil && m.Next != nil {
		return *m.Next
	}
	return 0
}

func (m *Ad) GetOggFid() []byte {
	if m != nil {
		return m.OggFid
	}
	return nil
}

func (m *Ad) GetImageFid() []byte {
	if m != nil {
		return m.ImageFid
	}
	return nil
}

func (m *Ad) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *Ad) GetClickUrl() string {
	if m != nil && m.ClickUrl != nil {
		return *m.ClickUrl
	}
	return ""
}

func (m *Ad) GetImpressionUrl() string {
	if m != nil && m.ImpressionUrl != nil {
		return *m.ImpressionUrl
	}
	return ""
}

func (m *Ad) GetProduct() string {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return ""
}

func (m *Ad) GetAdvertiser() string {
	if m != nil && m.Advertiser != nil {
		return *m.Advertiser
	}
	return ""
}

func (m *Ad) GetGid() []byte {
	if m != nil {
		return m.Gid
	}
	return nil
}

type Metadata struct {
	Type             *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Metadata         *string `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{7} }

func (m *Metadata) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Metadata) GetMetadata() string {
	if m != nil && m.Metadata != nil {
		return *m.Metadata
	}
	return ""
}

func init() {
	proto.RegisterType((*Frame)(nil), "Spotify.Frame")
	proto.RegisterType((*DeviceState)(nil), "Spotify.DeviceState")
	proto.RegisterType((*Capability)(nil), "Spotify.Capability")
	proto.RegisterType((*Goodbye)(nil), "Spotify.Goodbye")
	proto.RegisterType((*State)(nil), "Spotify.State")
	proto.RegisterType((*TrackRef)(nil), "Spotify.TrackRef")
	proto.RegisterType((*Ad)(nil), "Spotify.Ad")
	proto.RegisterType((*Metadata)(nil), "Spotify.Metadata")
	proto.RegisterEnum("Spotify.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("Spotify.CapabilityType", CapabilityType_name, CapabilityType_value)
	proto.RegisterEnum("Spotify.PlayStatus", PlayStatus_name, PlayStatus_value)
}

func init() { proto.RegisterFile("spirc.proto", fileDescriptor18) }

var fileDescriptor18 = []byte{
	// 1411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0xcd, 0x72, 0x1b, 0x37,
	0x12, 0x5e, 0xfe, 0x89, 0xc3, 0x26, 0x29, 0x41, 0xd0, 0xdf, 0x48, 0xb2, 0xd7, 0x34, 0xed, 0xf5,
	0xd2, 0xda, 0x5d, 0x6d, 0x4a, 0x97, 0x54, 0xe5, 0xa6, 0xc8, 0x96, 0xad, 0x2a, 0x5b, 0x71, 0x81,
	0x96, 0xae, 0x13, 0x68, 0x00, 0x31, 0x53, 0x1c, 0x0e, 0x46, 0xc0, 0x8c, 0x64, 0xdd, 0xf2, 0x02,
	0x39, 0xe5, 0x92, 0x73, 0xde, 0x22, 0xaf, 0x96, 0x53, 0x0a, 0x8d, 0x19, 0x72, 0x44, 0xb9, 0x2a,
	0x27, 0x4e, 0x7f, 0x5f, 0xa3, 0xd1, 0xe8, 0xfe, 0xd0, 0x20, 0x74, 0x4d, 0x1a, 0xe9, 0xf0, 0x30,
	0xd5, 0x2a, 0x53, 0xb4, 0x3d, 0x4e, 0x55, 0x16, 0x5d, 0xdf, 0x0f, 0x7f, 0x6f, 0x42, 0xeb, 0x54,
	0xf3, 0x99, 0xa4, 0x3e, 0xb4, 0x6f, 0xa5, 0x36, 0x91, 0x4a, 0xfc, 0xda, 0xa0, 0x36, 0xea, 0xb3,
	0xd2, 0xa4, 0x9b, 0xd0, 0x8a, 0x84, 0x4c, 0x32, 0xbf, 0x3e, 0xa8, 0x8d, 0x3a, 0xcc, 0x19, 0xf4,
	0x35, 0x10, 0x8c, 0x15, 0xaa, 0x38, 0x28, 0x17, 0x36, 0xd0, 0x61, 0xad, 0xc4, 0x2f, 0x8b, 0x00,
	0x5b, 0xb0, 0x62, 0xe4, 0x4d, 0x90, 0x68, 0xbf, 0x89, 0x91, 0x5b, 0x46, 0xde, 0x9c, 0x6b, 0xfa,
	0x0a, 0x1a, 0xd9, 0x7d, 0xea, 0xb7, 0x06, 0xb5, 0xd1, 0xea, 0xd1, 0xe6, 0x61, 0x91, 0xd2, 0xe1,
	0x47, 0x69, 0x0c, 0x9f, 0xc8, 0xcf, 0xf7, 0xa9, 0x64, 0xd6, 0x81, 0x7e, 0x0b, 0x3d, 0x21, 0x6f,
	0xa3, 0x50, 0x06, 0x26, 0xe3, 0x99, 0xf4, 0xdb, 0x83, 0xda, 0xa8, 0x5b, 0x59, 0xf0, 0x06, 0xc9,
	0xb1, 0xe5, 0x58, 0x57, 0x2c, 0x0c, 0x7a, 0x00, 0xed, 0x89, 0x52, 0xe2, 0xea, 0x5e, 0xfa, 0x5d,
	0x5c, 0x43, 0xe6, 0x6b, 0xde, 0x39, 0x9c, 0x95, 0x0e, 0xf4, 0x25, 0xb4, 0x5c, 0xf4, 0x1e, 0x7a,
	0xae, 0xce, 0x3d, 0x5d, 0x5c, 0x47, 0xd2, 0x3d, 0xf0, 0x52, 0x65, 0xa2, 0xcc, 0x1e, 0xb6, 0x8f,
	0x67, 0x99, 0xdb, 0x74, 0x1b, 0x56, 0x6e, 0x55, 0x9c, 0xcf, 0xa4, 0xbf, 0x8a, 0x4c, 0x61, 0xd1,
	0x57, 0xb0, 0x86, 0x8b, 0x83, 0x3c, 0x15, 0xf6, 0x27, 0x12, 0xfe, 0xfa, 0xa0, 0x36, 0x6a, 0xb0,
	0x3e, 0xc2, 0x17, 0x88, 0x9e, 0x09, 0xfa, 0x04, 0x3a, 0x5a, 0x86, 0x51, 0x1a, 0xd9, 0x52, 0xd3,
	0x41, 0x63, 0xd4, 0x61, 0x0b, 0x80, 0x7e, 0x03, 0x9b, 0xa1, 0x4a, 0x32, 0xf9, 0x25, 0x0b, 0xd2,
	0x98, 0xdf, 0x4b, 0x5d, 0x14, 0x63, 0x63, 0x50, 0x1b, 0xf5, 0x18, 0x2d, 0xb8, 0x4f, 0x48, 0xb9,
	0xd3, 0xef, 0x82, 0x97, 0xc8, 0xbb, 0x20, 0xe1, 0x33, 0xe9, 0x6f, 0x62, 0x63, 0xda, 0x89, 0xbc,
	0x3b, 0xb7, 0xbd, 0xfe, 0x1f, 0x78, 0x33, 0x99, 0x71, 0xc1, 0x33, 0xee, 0xef, 0xe2, 0x79, 0xd7,
	0x2b, 0xe5, 0x77, 0x04, 0x9b, 0xbb, 0x0c, 0x7f, 0x6b, 0x40, 0xb7, 0x52, 0x64, 0xfa, 0x14, 0xc0,
	0xdc, 0x05, 0x55, 0xb5, 0x74, 0x58, 0xc7, 0xdc, 0x95, 0xed, 0xde, 0x87, 0x4e, 0x64, 0x02, 0x1e,
	0x66, 0xd1, 0xad, 0xf4, 0x61, 0x50, 0x1b, 0x79, 0xcc, 0x8b, 0xcc, 0x31, 0xda, 0x36, 0xab, 0x90,
	0x27, 0x78, 0x06, 0x6c, 0x8a, 0xc7, 0xda, 0x21, 0x4f, 0x6c, 0xde, 0x95, 0x02, 0xf6, 0x1e, 0x14,
	0x90, 0x42, 0x13, 0x0f, 0xd1, 0xc7, 0x8d, 0xf0, 0xdb, 0xa6, 0x20, 0xb5, 0x56, 0x3a, 0x08, 0x95,
	0x28, 0x0b, 0xde, 0x41, 0xe4, 0x44, 0x09, 0x49, 0x47, 0x40, 0xae, 0x64, 0xc8, 0x67, 0xb2, 0x48,
	0x23, 0xe0, 0x99, 0xbf, 0x86, 0x45, 0x5f, 0x75, 0xb8, 0xcb, 0xe6, 0x38, 0xa3, 0x2f, 0xa0, 0xef,
	0x02, 0xcd, 0x9c, 0xec, 0x7c, 0x82, 0xbb, 0xf4, 0x10, 0x2c, 0xa4, 0x68, 0x15, 0x18, 0xf2, 0x94,
	0x5f, 0x45, 0x71, 0x94, 0x45, 0xd2, 0xf8, 0xeb, 0x83, 0xc6, 0xa8, 0x7b, 0xb4, 0x31, 0xaf, 0xd9,
	0x49, 0x49, 0xde, 0xb3, 0x07, 0x8e, 0x5f, 0xe9, 0x1a, 0xc6, 0x2d, 0xfa, 0xf1, 0xb0, 0x6b, 0x6f,
	0x2d, 0xb3, 0xd4, 0x9a, 0xc6, 0xdf, 0xb5, 0x26, 0x07, 0x58, 0x6c, 0x4e, 0x5f, 0xbb, 0x1b, 0x55,
	0xc3, 0x1b, 0xb5, 0xf3, 0x95, 0xf4, 0x16, 0x97, 0x6a, 0x0f, 0xbc, 0x28, 0xc9, 0x2e, 0x79, 0x9c,
	0x4b, 0xbf, 0x3e, 0x68, 0x8c, 0x1a, 0x6c, 0x6e, 0xd3, 0x01, 0x74, 0x4d, 0xa6, 0xa3, 0x64, 0xe2,
	0xe8, 0x06, 0x6a, 0xb1, 0x0a, 0x0d, 0x9f, 0x43, 0xbb, 0xb8, 0x41, 0xb6, 0x6b, 0x5a, 0x72, 0x33,
	0x17, 0x42, 0x61, 0x0d, 0xff, 0x68, 0x42, 0xcb, 0xc9, 0xe5, 0x19, 0x74, 0xcb, 0x22, 0xe4, 0x3a,
	0x2a, 0xa6, 0x08, 0x14, 0xd0, 0x85, 0x8e, 0x70, 0xc0, 0x24, 0x42, 0x7e, 0xc1, 0xf9, 0xd1, 0x67,
	0xce, 0xb0, 0xcb, 0xca, 0xbb, 0x15, 0xcc, 0x4c, 0x31, 0x3a, 0xa0, 0x84, 0x3e, 0x1a, 0xfa, 0x1f,
	0x58, 0xb1, 0x77, 0x20, 0x37, 0xc5, 0x08, 0x59, 0xf4, 0xc3, 0x16, 0x74, 0x8c, 0x14, 0x2b, 0x5c,
	0x6c, 0x27, 0x16, 0xd1, 0x24, 0x37, 0xb9, 0x96, 0xc2, 0xaa, 0xc2, 0x0e, 0x93, 0x26, 0xa3, 0xf3,
	0xb0, 0x05, 0x75, 0x9c, 0xd1, 0xff, 0xc3, 0x46, 0x99, 0xb6, 0x90, 0x26, 0xd4, 0x51, 0x8a, 0xd7,
	0xde, 0x7b, 0xd0, 0xba, 0x37, 0x0b, 0xc6, 0x4e, 0x50, 0xf3, 0x53, 0x7e, 0x7d, 0x1d, 0x3b, 0xa9,
	0x7a, 0xac, 0x34, 0x5d, 0x8d, 0x52, 0xc9, 0x33, 0x54, 0xaa, 0xc7, 0x0a, 0x8b, 0xfe, 0x17, 0x68,
	0xcc, 0x4d, 0x16, 0x84, 0x6a, 0x36, 0xe3, 0x89, 0x08, 0xdc, 0x98, 0x75, 0xe2, 0x20, 0x96, 0x39,
	0x71, 0xc4, 0x19, 0x4e, 0xdc, 0x65, 0xef, 0x99, 0x99, 0x44, 0xc2, 0xdf, 0xc2, 0xba, 0x54, 0xbd,
	0x3f, 0x5a, 0x9c, 0x1e, 0xc1, 0x96, 0x95, 0x5c, 0x94, 0x4c, 0x82, 0x6b, 0xad, 0x66, 0xc1, 0x35,
	0x8f, 0xe3, 0x2b, 0x1e, 0x4e, 0x7d, 0x1f, 0x53, 0xd8, 0x28, 0xc8, 0x53, 0xad, 0x66, 0xa7, 0x05,
	0x45, 0x09, 0x34, 0xb4, 0xba, 0xc3, 0x91, 0xd0, 0x67, 0xf6, 0x93, 0x1e, 0x42, 0xe9, 0x18, 0x64,
	0x9a, 0x87, 0xd3, 0xc0, 0x35, 0x6a, 0x0f, 0x3d, 0xd6, 0x0b, 0xea, 0xb3, 0x65, 0xce, 0xb0, 0x69,
	0xff, 0x86, 0x16, 0xfa, 0xf9, 0xfb, 0x4b, 0xda, 0x45, 0x1f, 0x26, 0xaf, 0x99, 0xe3, 0xe9, 0x3e,
	0xd4, 0xb9, 0xf0, 0x9f, 0xe0, 0xf0, 0xe9, 0xce, 0xbd, 0x8e, 0x05, 0xab, 0x73, 0x31, 0xfc, 0x11,
	0xbc, 0xd2, 0xdf, 0xe6, 0x64, 0x8f, 0x59, 0xc3, 0x39, 0x67, 0x3f, 0x2d, 0xb2, 0xd0, 0x91, 0xfd,
	0xb4, 0xf5, 0xbd, 0xc9, 0x65, 0x2e, 0x05, 0x2a, 0xc8, 0x63, 0x85, 0x65, 0x3b, 0x52, 0xf4, 0x09,
	0xe5, 0xd3, 0x61, 0xa5, 0x39, 0xfc, 0xb3, 0x06, 0xf5, 0x63, 0x81, 0xa3, 0xc5, 0xb2, 0x36, 0x7a,
	0x8b, 0xe1, 0x37, 0xdd, 0x81, 0xb6, 0x9a, 0x4c, 0x82, 0xeb, 0x48, 0xe0, 0x16, 0x3d, 0xb6, 0xa2,
	0x26, 0x93, 0xd3, 0x48, 0xe0, 0x5c, 0x9b, 0xf1, 0x89, 0x44, 0xaa, 0x81, 0x94, 0x87, 0x80, 0x25,
	0xf7, 0xc0, 0x13, 0xb9, 0xe6, 0x28, 0x91, 0x26, 0x46, 0x9b, 0xdb, 0x76, 0x61, 0x18, 0x47, 0xe1,
	0x34, 0xc8, 0x75, 0x8c, 0x5a, 0xed, 0x30, 0x0f, 0x81, 0x0b, 0x1d, 0xd3, 0x7f, 0xc1, 0x6a, 0x34,
	0x4b, 0xb5, 0x34, 0x76, 0x76, 0xa2, 0xc7, 0x0a, 0x7a, 0xf4, 0x17, 0xa8, 0x75, 0xf3, 0xa1, 0x9d,
	0x6a, 0x25, 0xf2, 0xd0, 0x49, 0xb6, 0xc3, 0x4a, 0x93, 0xfe, 0x13, 0x80, 0x8b, 0x5b, 0xa9, 0xb3,
	0xc8, 0x48, 0x5d, 0xc8, 0xb3, 0x82, 0x94, 0x05, 0xec, 0xcc, 0x0b, 0x38, 0xfc, 0x0e, 0xbc, 0x72,
	0x94, 0xd8, 0x0a, 0x64, 0xf7, 0xa9, 0x2c, 0x2e, 0x2f, 0x7e, 0xdb, 0xb3, 0xcc, 0x67, 0x90, 0xab,
	0xf2, 0xdc, 0x3e, 0xf8, 0xa5, 0x09, 0xdd, 0xca, 0x0b, 0x4d, 0xb7, 0x60, 0x7d, 0x5a, 0xb1, 0xdf,
	0xcb, 0x38, 0x56, 0xa4, 0x46, 0x77, 0x60, 0xa3, 0x0a, 0x17, 0xc3, 0x82, 0xd4, 0x97, 0xfd, 0x3f,
	0x69, 0x75, 0x25, 0x49, 0x83, 0x6e, 0x03, 0xad, 0xc2, 0xe7, 0x28, 0x07, 0x02, 0x74, 0x13, 0x48,
	0x15, 0xff, 0xa0, 0xb8, 0x20, 0x9b, 0xcb, 0xa8, 0xbd, 0xee, 0x64, 0xeb, 0x51, 0x68, 0x9e, 0x1b,
	0x49, 0xb6, 0xe9, 0x2e, 0x6c, 0x2d, 0x3b, 0x3b, 0x6a, 0x67, 0x39, 0xce, 0x58, 0xca, 0x29, 0xf1,
	0x1f, 0x45, 0xd7, 0xf2, 0x96, 0xec, 0x2e, 0xa3, 0xe7, 0xf2, 0x4b, 0x46, 0xf6, 0x96, 0xf3, 0xbe,
	0xc4, 0x17, 0x8b, 0xec, 0x2f, 0x9f, 0x7f, 0xec, 0x06, 0x01, 0x79, 0xb2, 0xbc, 0x80, 0xe1, 0x20,
	0x20, 0x4f, 0xe9, 0x1e, 0x6c, 0x3f, 0x0e, 0xf4, 0x46, 0xdd, 0x25, 0xe4, 0x19, 0xf5, 0x61, 0xf3,
	0x31, 0x77, 0x91, 0x92, 0xc1, 0xf2, 0x36, 0x4c, 0xa6, 0x31, 0x0f, 0x25, 0x79, 0xbe, 0xbc, 0xcd,
	0x07, 0x35, 0x51, 0x79, 0x46, 0x86, 0xcb, 0xb8, 0x7d, 0x06, 0x55, 0x42, 0x5e, 0x3c, 0x4e, 0xcb,
	0xbe, 0xb2, 0xe4, 0x25, 0x7d, 0x06, 0x7b, 0x55, 0xdc, 0xfd, 0x59, 0x29, 0xc5, 0x43, 0x7e, 0xae,
	0x1d, 0xfc, 0x5a, 0x87, 0xd5, 0x87, 0xef, 0x0b, 0xc6, 0x1a, 0xe7, 0x69, 0xaa, 0x74, 0x26, 0xc5,
	0x89, 0xbb, 0x70, 0x86, 0xd4, 0x28, 0x81, 0xde, 0xf4, 0x84, 0x27, 0xdf, 0x4b, 0xf7, 0xde, 0x91,
	0x3a, 0xd6, 0x94, 0x49, 0xfb, 0xb0, 0x84, 0xd9, 0x67, 0xf5, 0x41, 0x85, 0x3c, 0x26, 0x0d, 0xba,
	0x06, 0xdd, 0xa9, 0xfb, 0xbb, 0x61, 0xc3, 0x91, 0x26, 0xba, 0xbd, 0xe3, 0x11, 0x7f, 0x7b, 0x73,
	0xa2, 0x92, 0x44, 0x86, 0xd9, 0x99, 0x20, 0x2d, 0xba, 0x01, 0x6b, 0xe5, 0x36, 0xa6, 0x38, 0xdf,
	0x0a, 0x5d, 0x87, 0xfe, 0xf4, 0xcc, 0xfc, 0x70, 0x65, 0xa4, 0xbe, 0xe5, 0x57, 0xb1, 0x24, 0x6d,
	0xdc, 0xd6, 0x95, 0x6c, 0x9c, 0xc9, 0xd4, 0x10, 0xaf, 0xba, 0x52, 0x0a, 0xbb, 0x87, 0x21, 0x1d,
	0x97, 0x9d, 0x1b, 0xa0, 0xc7, 0xe1, 0xd4, 0x10, 0x78, 0xb0, 0x41, 0x51, 0x90, 0x2e, 0xed, 0x42,
	0x7b, 0xfa, 0x3e, 0x12, 0x42, 0x26, 0xa4, 0x87, 0xe5, 0x2f, 0x3d, 0xec, 0xa1, 0xe2, 0xc8, 0x64,
	0x97, 0x47, 0xa4, 0x7f, 0x20, 0x00, 0x16, 0x6f, 0x10, 0x06, 0x5a, 0x98, 0xe3, 0x4c, 0xa5, 0xe4,
	0x1f, 0x4b, 0x20, 0x4a, 0xb8, 0x86, 0x27, 0xad, 0x80, 0x28, 0xd3, 0x3a, 0x16, 0x74, 0x81, 0xda,
	0x3b, 0x10, 0x25, 0x13, 0xd2, 0xf8, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x8f, 0x19, 0x6d, 0xd3,
	0x0b, 0x00, 0x00,
}
